package org.eclipse.cyclonedds.ddsc;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class dds_key_descriptor extends Structure {
	/** C type : const char* */
	public Pointer m_name;
	public Pointer getM_name() {
		return m_name;
	}
	public void setM_name(Pointer m_name) {
		this.m_name = m_name;
	}
	public int m_index;
	public int getM_index() {
		return m_index;
	}
	public void setM_index(int m_index) {
		this.m_index = m_index;
	}
	public dds_key_descriptor() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("m_name", "m_index");
	}
	/** @param m_name C type : const char* */
	public dds_key_descriptor(Pointer m_name, int m_index) {
		super();
		this.m_name = m_name;
		this.m_index = m_index;
	}
	public dds_key_descriptor(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends dds_key_descriptor implements Structure.ByReference {
		
	};
	public static class ByValue extends dds_key_descriptor implements Structure.ByValue {
		
	};
}
