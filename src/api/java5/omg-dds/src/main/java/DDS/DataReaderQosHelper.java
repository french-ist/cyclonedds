package DDS;


/**
* DDS/DataReaderQosHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /home/ndrianja/IST/cyclonedds/src/api/java5/omg-dds/src/main/idl/dds_dcps_builtintopics.idl
* jeudi 28 f√©vrier 2019 10 h 26 CET
*/

abstract public class DataReaderQosHelper
{
  private static String  _id = "IDL:DDS/DataReaderQos:1.0";

  public static void insert (org.omg.CORBA.Any a, DDS.DataReaderQos that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static DDS.DataReaderQos extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [15];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = DDS.DurabilityQosPolicyHelper.type ();
          _members0[0] = new org.omg.CORBA.StructMember (
            "durability",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.DeadlineQosPolicyHelper.type ();
          _members0[1] = new org.omg.CORBA.StructMember (
            "deadline",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.LatencyBudgetQosPolicyHelper.type ();
          _members0[2] = new org.omg.CORBA.StructMember (
            "latency_budget",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.LivelinessQosPolicyHelper.type ();
          _members0[3] = new org.omg.CORBA.StructMember (
            "liveliness",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.ReliabilityQosPolicyHelper.type ();
          _members0[4] = new org.omg.CORBA.StructMember (
            "reliability",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.DestinationOrderQosPolicyHelper.type ();
          _members0[5] = new org.omg.CORBA.StructMember (
            "destination_order",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.HistoryQosPolicyHelper.type ();
          _members0[6] = new org.omg.CORBA.StructMember (
            "history",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.ResourceLimitsQosPolicyHelper.type ();
          _members0[7] = new org.omg.CORBA.StructMember (
            "resource_limits",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.UserDataQosPolicyHelper.type ();
          _members0[8] = new org.omg.CORBA.StructMember (
            "user_data",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.OwnershipQosPolicyHelper.type ();
          _members0[9] = new org.omg.CORBA.StructMember (
            "ownership",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.TimeBasedFilterQosPolicyHelper.type ();
          _members0[10] = new org.omg.CORBA.StructMember (
            "time_based_filter",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.ReaderDataLifecycleQosPolicyHelper.type ();
          _members0[11] = new org.omg.CORBA.StructMember (
            "reader_data_lifecycle",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.SubscriptionKeyQosPolicyHelper.type ();
          _members0[12] = new org.omg.CORBA.StructMember (
            "subscription_keys",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.ReaderLifespanQosPolicyHelper.type ();
          _members0[13] = new org.omg.CORBA.StructMember (
            "reader_lifespan",
            _tcOf_members0,
            null);
          _tcOf_members0 = DDS.ShareQosPolicyHelper.type ();
          _members0[14] = new org.omg.CORBA.StructMember (
            "share",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (DDS.DataReaderQosHelper.id (), "DataReaderQos", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static DDS.DataReaderQos read (org.omg.CORBA.portable.InputStream istream)
  {
    DDS.DataReaderQos value = new DDS.DataReaderQos ();
    value.durability = DDS.DurabilityQosPolicyHelper.read (istream);
    value.deadline = DDS.DeadlineQosPolicyHelper.read (istream);
    value.latency_budget = DDS.LatencyBudgetQosPolicyHelper.read (istream);
    value.liveliness = DDS.LivelinessQosPolicyHelper.read (istream);
    value.reliability = DDS.ReliabilityQosPolicyHelper.read (istream);
    value.destination_order = DDS.DestinationOrderQosPolicyHelper.read (istream);
    value.history = DDS.HistoryQosPolicyHelper.read (istream);
    value.resource_limits = DDS.ResourceLimitsQosPolicyHelper.read (istream);
    value.user_data = DDS.UserDataQosPolicyHelper.read (istream);
    value.ownership = DDS.OwnershipQosPolicyHelper.read (istream);
    value.time_based_filter = DDS.TimeBasedFilterQosPolicyHelper.read (istream);
    value.reader_data_lifecycle = DDS.ReaderDataLifecycleQosPolicyHelper.read (istream);
    value.subscription_keys = DDS.SubscriptionKeyQosPolicyHelper.read (istream);
    value.reader_lifespan = DDS.ReaderLifespanQosPolicyHelper.read (istream);
    value.share = DDS.ShareQosPolicyHelper.read (istream);
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, DDS.DataReaderQos value)
  {
    DDS.DurabilityQosPolicyHelper.write (ostream, value.durability);
    DDS.DeadlineQosPolicyHelper.write (ostream, value.deadline);
    DDS.LatencyBudgetQosPolicyHelper.write (ostream, value.latency_budget);
    DDS.LivelinessQosPolicyHelper.write (ostream, value.liveliness);
    DDS.ReliabilityQosPolicyHelper.write (ostream, value.reliability);
    DDS.DestinationOrderQosPolicyHelper.write (ostream, value.destination_order);
    DDS.HistoryQosPolicyHelper.write (ostream, value.history);
    DDS.ResourceLimitsQosPolicyHelper.write (ostream, value.resource_limits);
    DDS.UserDataQosPolicyHelper.write (ostream, value.user_data);
    DDS.OwnershipQosPolicyHelper.write (ostream, value.ownership);
    DDS.TimeBasedFilterQosPolicyHelper.write (ostream, value.time_based_filter);
    DDS.ReaderDataLifecycleQosPolicyHelper.write (ostream, value.reader_data_lifecycle);
    DDS.SubscriptionKeyQosPolicyHelper.write (ostream, value.subscription_keys);
    DDS.ReaderLifespanQosPolicyHelper.write (ostream, value.reader_lifespan);
    DDS.ShareQosPolicyHelper.write (ostream, value.share);
  }

}
